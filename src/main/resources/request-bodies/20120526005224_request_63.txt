{"method":"editPost","params":[,1,"Gatling : Installer votre environnement de développement","<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://3.bp.blogspot.com/-GOaQ9CuNmqo/T76Iom6oLyI/AAAAAAAAAGI/XzNNPdeQP9E/s1600/gatling_logo.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"65\" src=\"http://3.bp.blogspot.com/-GOaQ9CuNmqo/T76Iom6oLyI/AAAAAAAAAGI/XzNNPdeQP9E/s200/gatling_logo.png\" width=\"200\" /></a></div>\n<a href=\"http://gatling-tool.org/\" target=\"_blank\"><br />Gatling</a> est un outil qui permet d\'effectuer des tests de performances de vos applications à base de scripts écrits en Scala.<br />\nLe nom Gatling fait référence à une mitrailleuse créée en 1861, plus de détail sur <a href=\"http://fr.wikipedia.org/wiki/Gatling/\" target=\"_blank\">Wikipedia</a>. Vous l\'avez compris l\'objectif ici est de tirer à plein feux sur votre application.<br />\nL\'approche utilisé peut se résumer en deux concepts : asynchrone tout le temps et un DSL pour écrire les scripts.<br />\n<br />\n<span style=\"font-size: x-large;\">Asynchrone à l\'extrême</span><br />\nLe projet s\'est construit autour du <a href=\"http://en.wikipedia.org/wiki/Actor_model\" target=\"_blank\">design pattern Actor </a>conçu pour faciliter la programmation des traitements concurrents. L\'unité de base du concept est un acteur et les acteurs communiquent entre eux par le biais de messages. Il faut donc voir un acteur comme une unité de traitement avec deux types d\'interactions : une réception de message et un envoi de message. <a href=\"http://akka.io/\" target=\"_blank\">Akka</a>&nbsp;est le framework open source utilisé pour implémenter ce design pattern. Ce choix est de plus en plus adopté par des projets émergeants (<a href=\"http://www.playframework.org/\" target=\"_blank\">Play framework</a>,<a href=\"http://code.google.com/p/kandash/\" target=\"_blank\"> Kandash</a>, ...)<br />\nGatling effectue des appels HTTP non bloquant, ce qui lui permet d\'exécuter plusieurs requêtes HTTP avec l\'aide d\'un seul thread. Ce point est très important car un nombre trop important de thread entraine une plus grande consommation CPU et mémoire. Le framework utilisé pour faire ces appels HTTP est <a href=\"https://github.com/sonatype/async-http-client\" target=\"_blank\">Async Http Client</a>&nbsp;basé sur le client <a href=\"http://www.jboss.org/netty\" target=\"_blank\">Netty</a>. Là encore on peut remarquer la similitude avec&nbsp;<a href=\"http://www.playframework.org/\" target=\"_blank\">Play framework</a>&nbsp;qui utilise également&nbsp;<a href=\"http://www.jboss.org/netty\" target=\"_blank\">Netty</a>, cette fois ci côté serveur.<br />\nEn combinant le modèle des acteurs et les appels Http non bloquant, Gatling met toutes les chances de son côté pour avoir de très bonnes performances.<br />\n<br />\n<span style=\"font-size: x-large;\">Un DSL pour écrire les scripts</span><br />\nL\'objectif de Gatling est de sortir du modèle d\'outil de réalisation de script à partir d\'une interface graphique pour s\'opposer à des outils comme <a href=\"http://jmeter.apache.org/\" target=\"_blank\">Apache JMeter</a>&nbsp;et aller dans le sens des frameworks comme <a href=\"http://grinder.sourceforge.net/\" target=\"_blank\">The Grinder.</a>&nbsp;Le langage choisit pour l\'écriture des scripts est Scala. Pas de panique, pas besoin de connaître ou de maîtriser ce langage, l\'api fournie est \"humainement\" compréhensible, simple, concis.<br />\nEn voici un exemple, je vous laisse juger par vous même :<br />\n<pre style=\"background-image: URL(http://2.bp.blogspot.com/_z5ltvMQPaa8/SjJXr_U2YBI/AAAAAAAAAAM/46OqEP32CJ8/s320/codebg.gif); background: #f0f0f0; border: 1px dashed #CCCCCC; color: black; font-family: arial; font-size: 12px; height: auto; line-height: 20px; overflow: auto; padding: 0px; text-align: left; width: 99%;\"><code style=\"color: black; word-wrap: normal;\">  scenario(\"Mon scénario à moi tout seul\")  \n     .exec(  \n      http(\"requette_mapage1\")  \n      .get(\"/faces/mapage1.html\")  \n     )  \n     .exec(  \n      http(\"requette_mapage2\")  \n      .get(\"/faces/mapage2.html\")  \n      .queryParam(\"nom\", \"\"\"rossi\"\"\")  \n      .check(status.is(304)  \n     )  \n</code></pre>\nLe fait d\'utiliser un langage fortement typé comme Scala permet de détecter les erreurs de syntaxes à la compilation et d\'utiliser toute la puissance de votre IDE pour organiser le code, mutualiser des bouts de script, etc...<br />\nPour les développeurs Java, l\'avantage de Scala est de pouvoir directement accéder&nbsp;aux API du JDK et aux différentes bibliothèques java une fois ajoutée au classpath.<br />\n<br />\n<br />\n<span style=\"font-size: x-large;\">Installer Gatling</span><br />\nPour une installation/utilisation classique, vous pouvez suivre les instructions de la page :&nbsp;<a href=\"https://github.com/excilys/gatling/wiki/Getting-Started\">https://github.com/excilys/gatling/wiki/Getting-Started</a>. Il suffit de télécharger puis décompresser le livrable. Vous pourrez ainsi écrire et exécuter vos scripts en vous basant sur les exemples fournies.<br />\nLe lien suivant explique comment enregistrer un scénario et l\'exécuter :&nbsp;<a href=\"https://github.com/excilys/gatling/wiki/First-Steps-with-Gatling\">https://github.com/excilys/gatling/wiki/First-Steps-with-Gatling</a>.<br />\nDans cet article, nous allons plutôt voir comment il s\'intègre dans votre IDE (Eclipse) et dans le cycle de vie de vos projets (Maven). Il serait dommage de ne pas profiter de la puissance de votre IDE pour accélérer l\'écriture de vos scripts.<br />\n<br />\n<br />\n<span style=\"font-size: x-large;\">Installer vos outils de développement</span><br />\n<div>\nVoici ce dont vous avez besoin, je mets en parenthèse les versions que j\'ai utilisé :<br />\n<br />\n<ul>\n<li>un JDK 6+ (1.6.0_31)</li>\n<li><a href=\"http://www.eclipse.org/downloads/\" target=\"_blank\">Eclipse</a> (Eclipse Classic 3.7.2)</li>\n<li><a href=\"http://scala-ide.org/\" target=\"_blank\">Scala IDE Plugin</a> (<a href=\"http://download.scala-ide.org/releases-29/stable/site/\">http://download.scala-ide.org/releases-29/stable/site/</a>)</li>\n<li><a href=\"http://www.eclipse.org/m2e/\" target=\"_blank\">M2Eclipse</a> (Indigo Update Site &gt; Collaboration &gt; m2e)</li>\n<li><a href=\"http://alchim31.free.fr/m2e-scala/update-site\" target=\"_blank\">M2E-Scala</a> (<a href=\"http://alchim31.free.fr/m2e-scala/update-site/\">http://alchim31.free.fr/m2e-scala/update-site/</a>)</li>\n</ul>\n<div>\nJ\'ai dû repartir d\'une version d\'Eclipse \"neuve\" car le&nbsp;<a href=\"http://scala-ide.org/\" target=\"_blank\">Scala IDE Plugin</a>&nbsp;ne s\'installait pas sur ma version d\'Eclipse courante contenant très grand nombre de plugins installés.</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<span style=\"font-size: x-large;\">Créer le projet Maven</span></div>\n<div>\n<span style=\"font-size: large;\">Ajouter le catalog gatling&nbsp;</span></div>\n<div>\nNous allons pour cela utiliser l\'archetype \"gatling-highcharts-maven-archetype\". Cet archetype n\'étant pas présent dans le repository maven central, il faut ajouter un nouveau catalog à eclipse.</div>\n<div>\nAllez dans le menu :</div>\n<div>\nWindow &gt; Preferences &gt; Maven &gt; Archetypes &gt; Add Remote Catalog...</div>\n<div>\nPuis saisissez l\'url :&nbsp;<a href=\"http://repository.excilys.com/content/groups/public/archetype-catalog.xml\">http://repository.excilys.com/content/groups/public/archetype-catalog.xml</a></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-A4WqUwHOB0E/T76433yEcmI/AAAAAAAAAGU/_0w8js0SeCs/s1600/eclipse_maven_catalog.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"488\" src=\"http://4.bp.blogspot.com/-A4WqUwHOB0E/T76433yEcmI/AAAAAAAAAGU/_0w8js0SeCs/s640/eclipse_maven_catalog.png\" width=\"640\" /></a></div>\n<div>\n<br /></div>\n<div>\n<span style=\"font-size: large;\">Créer un projet maven à partir de l\'archetype gatling</span></div>\n<div>\nFile &gt; New &gt; Maven Project &gt; Sélectionner l\'archetype \"gatling-highcharts-maven-archetype\" (version 1.1.6 dans mon cas)</div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-9Pp_HrYe6qg/T767PIKIm4I/AAAAAAAAAGc/4yrGvAvW6oQ/s1600/eclipse_maven_archetype.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"186\" src=\"http://4.bp.blogspot.com/-9Pp_HrYe6qg/T767PIKIm4I/AAAAAAAAAGc/4yrGvAvW6oQ/s640/eclipse_maven_archetype.png\" width=\"640\" /></a></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<span style=\"font-size: x-large;\">Anatomie du projet généré</span></div>\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://2.bp.blogspot.com/-u8SFrjiHWzM/T769nNFBlDI/AAAAAAAAAGo/lXlxObHG200/s1600/structure_mvn.png\" imageanchor=\"1\" style=\"clear: left; float: left; margin-bottom: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://2.bp.blogspot.com/-u8SFrjiHWzM/T769nNFBlDI/AAAAAAAAAGo/lXlxObHG200/s320/structure_mvn.png\" width=\"213\" /></a></div>\n<div>\n<br /></div>\n<div>\nOn retrouve un projet Maven classique avec un pom.xml, les sources scala dans src/main/scala, les fichiers de configuration&nbsp;dans</div>\n<div>\nsrc/main/resources.</div>\n<div>\n<br /></div>\n<div>\nEngine.scala est la classe principale qui lance la mitrailleuse.</div>\n<div>\n<br /></div>\n<div>\nIDEPathHelper.scala contient les différents chemins d\'accès aux ressources comme les classes compilées, les simulations, les fichiers de données, etc...</div>\n<div>\n<br /></div>\n<div>\nRecorder.scala est un utilitaire qui permet d\'enregistrer un scénario avec par exemple votre navigateur et de générer les scripts correspondants.</div>\n<div>\n<br /></div>\n<div>\nFooSimulation.scala une simulation qui ne fait rien. Il peut être compléter pour créer son premier scénario.</div>\n<div>\n<br /></div>\n<div>\ngatling.conf donne la possibilité de paramétrer gatling</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<span style=\"font-size: x-large;\">Générer une simulation avec le \"Recorder\"</span><br />\nLe \"Recorder\" permet de capturer toutes les requêtes HTTP en se positionnant en proxy entre votre machine et votre réseau. Le cas d\'utilisation le plus courant est celui d\'enregistrer un scénario à partir d\'un navigateur web en y paramétrant un proxy.<br />\n<br />\nPour lancer l\'outil \"Recorder\" :<br />\n<br />\n<ul>\n<li>Sélectionner le fichier \"Recorder.scala\"</li>\n<li>Clic droit &gt; Run As &gt; Scala Application</li>\n</ul>\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-uxVbOl-0q-Y/T8ABtge8SPI/AAAAAAAAAG4/A4pmZNlefUs/s1600/gatling_run_recorder.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"203\" src=\"http://4.bp.blogspot.com/-uxVbOl-0q-Y/T8ABtge8SPI/AAAAAAAAAG4/A4pmZNlefUs/s640/gatling_run_recorder.png\" width=\"640\" /></a></div>\n<br /></div>\n<div>\nL\'écran suivant se lance :<br />\n<br />\n<div class=\"separator\" style=\"clear: both; text-align: center;\">\n<a href=\"http://4.bp.blogspot.com/-dcpOwPn9R_Q/T8ADrgBxrLI/AAAAAAAAAHA/vLv-10-H6sM/s1600/recorder.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"354\" src=\"http://4.bp.blogspot.com/-dcpOwPn9R_Q/T8ADrgBxrLI/AAAAAAAAAHA/vLv-10-H6sM/s640/recorder.png\" width=\"640\" /></a></div>\n<br />\nLa partie \"Network/Listening Network\" sert à renseigner les ports d\'écoute qui seront à paramétrer dans l\'outil utilisé pour exécuter un scénario (un navigateur web par exemple). Je ne parle pas exprès d\'un navigateur web parce que vous allez pouvoir utiliser le Recorder avec n\'importe quel traitement qui fait des requêtes HTTP, une compilation Maven par exemple.<br />\nDans le cas présent, le proxy à paramétrer sera :<br />\n<br />\n<ul>\n<li>Pour du HTTP locahost:8000</li>\n<li>Pour du HTTPS localhost:8001</li>\n</ul>\n<br />\nLa partie \"Output\" sert à paramétrer l\'endroit où sera généré le script.<br />\n<br />\nCommencer à paramétrer l\'outil qui va vous aider avec le proxy configuré. Si votre outil possède un cache, comme un navigateur web, à vous de voir si vous voulez exécuter votre simulation dans ces conditions ou vider le cache.</div>\n<div>\n<br />\nVous pouvez ensuite cliquer sur le bouton \"Start\".<br />\n<br />\n<span style=\"color: #990000;\"><u>Attention petit bug déroutant sur Mac OSX Lion</u></span> : l\'affichage par défaut du Recorder ne permet pas de voir le bouton \"Start\". J\'ai mis un certain temps à pouvoir trouver l\'astuce pour l\'afficher. Il consiste à simplement agrandir la fenêtre avec le bouton \"+\" avec comme conséquence la disparition de quelques rubriques de la partie \"Output\". Ce bug est déjà corrigé dans la version 1.2.0-SNAPSHOT en cours de développement.<br />\n<br /></div>\n<div>\nVous êtes désormais en mode écoute sur les ports configurés pour votre machine. Si vous faites par exemple la configuration du proxy au niveau de votre connexion Wifi, vous allez pouvoir voir tout ce qui se passe</div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n<div>\n<br /></div>\n</div>\n","4844198903762281199",1,0,1,3,0,2,1,["Eclipse","Gatling","Maven"]
,0,[,,,,,,""]
,"default",0,[,2012,5,26,0,55]
,,,1,"",[,1,[,0,0,0,0,0,0,0,0,0,"0"]
]
,3]
,"xsrf":"AOuZoY51KlyoR099QG8q3ftGM1aFvYz6HQ:1337986522555"}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       